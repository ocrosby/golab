// Code generated by MockGen. DO NOT EDIT.
// Source: golab.com/m/v2/mocking/cars/honda (interfaces: IAccordFactory)

// Package honda is a generated GoMock package.
package honda

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockIAccordFactory is a mock of IAccordFactory interface.
type MockIAccordFactory struct {
	ctrl     *gomock.Controller
	recorder *MockIAccordFactoryMockRecorder
}

// MockIAccordFactoryMockRecorder is the mock recorder for MockIAccordFactory.
type MockIAccordFactoryMockRecorder struct {
	mock *MockIAccordFactory
}

// NewMockIAccordFactory creates a new mock instance.
func NewMockIAccordFactory(ctrl *gomock.Controller) *MockIAccordFactory {
	mock := &MockIAccordFactory{ctrl: ctrl}
	mock.recorder = &MockIAccordFactoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIAccordFactory) EXPECT() *MockIAccordFactoryMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockIAccordFactory) Create() *Accord {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create")
	ret0, _ := ret[0].(*Accord)
	return ret0
}

// Create indicates an expected call of Create.
func (mr *MockIAccordFactoryMockRecorder) Create() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockIAccordFactory)(nil).Create))
}

// CreateWithState mocks base method.
func (m *MockIAccordFactory) CreateWithState(arg0 string) (*Accord, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateWithState", arg0)
	ret0, _ := ret[0].(*Accord)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateWithState indicates an expected call of CreateWithState.
func (mr *MockIAccordFactoryMockRecorder) CreateWithState(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateWithState", reflect.TypeOf((*MockIAccordFactory)(nil).CreateWithState), arg0)
}

// CreateWithStateAndYear mocks base method.
func (m *MockIAccordFactory) CreateWithStateAndYear(arg0 string, arg1 int) (*Accord, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateWithStateAndYear", arg0, arg1)
	ret0, _ := ret[0].(*Accord)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateWithStateAndYear indicates an expected call of CreateWithStateAndYear.
func (mr *MockIAccordFactoryMockRecorder) CreateWithStateAndYear(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateWithStateAndYear", reflect.TypeOf((*MockIAccordFactory)(nil).CreateWithStateAndYear), arg0, arg1)
}

// CreateWithYear mocks base method.
func (m *MockIAccordFactory) CreateWithYear(arg0 int) (*Accord, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateWithYear", arg0)
	ret0, _ := ret[0].(*Accord)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateWithYear indicates an expected call of CreateWithYear.
func (mr *MockIAccordFactoryMockRecorder) CreateWithYear(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateWithYear", reflect.TypeOf((*MockIAccordFactory)(nil).CreateWithYear), arg0)
}
